function [grad_H_kx , grad_H_ky] = grad_TB_Liu_TNN_fun(k,Parameter)

a = Parameter(1);
t_0 = Parameter(5);
t_1 = Parameter(6);
t_2 = Parameter(7);
t_11 = Parameter(8);
t_12 = Parameter(9);
t_22 = Parameter(10);
r_0 = Parameter(11);
r_1 = Parameter(12);
r_2 = Parameter(13);
r_11 = Parameter(14);
r_12 = Parameter(15);
u_0 = Parameter(16);
u_1 = Parameter(17);
u_2 = Parameter(18);
u_11 = Parameter(19);
u_12 = Parameter(20);
u_22 = Parameter(21);



alpha = k(1,:) / 2 .* a;
ca = cos(alpha);
c2a = cos(2 .* alpha);
c3a = cos(3 .* alpha);
sa = sin(alpha);
s2a = sin(2 .* alpha);
s3a = sin(3 .* alpha);
s4a = sin(4 .* alpha);

beta = sqrt(3) .* k(2,:) / 2 .* a;
cb = cos(beta);
c2b = cos(2 .* beta);
sb = sin(beta);
s2b = sin(2 .* beta);



% Ableitungen nach alpha

V0_alpha = -4 .* t_0 .* ( cb .* sa + s2a) ...
    - 12 .* r_0 .* cb .* s3a ...
    - 8 .* u_0 .* ( c2b .* s2a + s4a );

RealV1_alpha = -2 .* sqrt(3) .* t_2 .* ca .* sb ...
    + 6 .* (r_1 + r_2) .* c3a .* sb ...
    - 4 .* sqrt(3) .* u_2 .* c2a .* s2b;
ImagV1_alpha = 6 .* (r_1 - r_2) .* c3a .* cb ...
    + 2 .* t_1 .* ca .* (2 .* ca + cb) ...
    + 4 .* u_1 .* c2a .* (2 .* c2a + c2b) ...
    - 4 .* t_1 .* sa.^2 - 8 .* u_1 .* s2a.^2;
V1_alpha = RealV1_alpha + 1i .* ImagV1_alpha;

RealV2_alpha = 2 .* t_2 .* (cb .* sa - 2 .* s2a) ...
    + 2 .* sqrt(3) .* (r_1 + r_2) .* cb .* s3a ...
    + 4 .* u_2 .* (c2b .* s2a - 2 .* s4a);
ImagV2_alpha = -2 .* sqrt(3) .* t_1 .* sa .* sb ...
    - 2 .* sqrt(3) .* (r_1 - r_2) .* s3a .* sb ...
    - 4 .* sqrt(3) .* u_1 .* s2a .* s2b;
V2_alpha = RealV2_alpha + 1i .* ImagV2_alpha;

V11_alpha = -(t_11 + 3 .* t_22) .* cb .* sa ...
    - 4 .* t_11 .* s2a ...
    - 2 .* (u_11 + 3 .* u_22) .* c2b .* s2a ...
    - 12 .* r_11 .* cb .* s3a - 8 .* u_11 .* s4a;

RealV12_alpha = sqrt(3) .* (-t_11 + t_22) .* ca .* sb ...
    + 12 .* r_12 .* c3a .* sb ...
    + 2 .* sqrt(3) .* (-u_11 + u_22) .* c2a .* s2b;
ImagV12_alpha = 4 .* t_12 .* ca .* (ca - cb) ...
    + 8 .* u_12 .* c2a .* (c2a - c2b) ...
    - 4 .* t_12 .* sa.^2 - 8 .* u_12 .* s2a.^2;
V12_alpha = RealV12_alpha + 1i .* ImagV12_alpha;

V22_alpha = -(3 .* t_11 + t_22) .* cb .* sa ...
    - 4 .* t_22 .* s2a ...
    - 2 .* (3 .* u_11 + u_22) .* c2b .* s2a...
    - 12 .* r_11 .* cb .* s3a ...
    - 8 .* sqrt(3) .* r_12 .* cb .* s3a ...
    - 8 .* u_22 .* s4a;



% Ableitungen nach beta

V0_beta = -4 .* t_0 .* ca .* sb ...
    + 2 .* r_0 .* (-2 .* c3a .* sb - 2 .* s2b) ...
    - 8 .* u_0 .* c2a .* s2b;

RealV1_beta = -2 .* sqrt(3) .* t_2 .* cb .* sa ...
    - 4 .* sqrt(3) .* u_2 .* c2b .* s2a ...
    + 2 .* (r_1 + r_2) .* cb .* s3a;
ImagV1_beta = -2 .* t_1 .* sa .* sb ...
    - 2 .* (r_1 - r_2) .* s3a .* sb ...
    - 4 .* u_1 .* s2a .* s2b;
V1_beta = RealV1_beta + 1i .* ImagV1_beta;

RealV2_beta = 2 .* t_2 .* ca .* sb ...
    + 4 .* u_2 .* c2a .* s2b ...
    - 2 / sqrt(3) .* (r_1 + r_2) ...
    .* (-c3a .* sb + 2 .* s2b);
ImagV2_beta = 2 .* sqrt(3) .* t_1 .* ca .* cb ...
    + 2 / sqrt(3) .* (r_1 - r_2) .* cb ...
    .* (c3a + 2 .* cb) ...
    + 4 .* sqrt(3) .* u_1 .* c2a .* c2b ...
    - 4 / sqrt(3) .* (r_1 - r_2) .* sb.^2;
V2_beta = RealV2_beta + 1i .* ImagV2_beta;

V11_beta = -(t_11 + 3 .* t_22) .* ca .* sb ...
    - 4 .* r_11 .* c3a .* sb ...
    - 4 .* (r_11 + sqrt(3) .* r_12) .* s2b ...
    - 2 .* (u_11 + 3 .* u_22) .* c2a .* s2b;

RealV12_beta = sqrt(3) .* (-t_11 + t_22) .* cb .* sa ...
    + 2 .* sqrt(3) .* (-u_11 + u_22) .* c2b .* s2a ...
    + 4 .* r_12 .* cb .* s3a;
ImagV12_beta = 4 .* t_12 .* sa .* sb ...
    + 8 .* u_12 .* s2a .* s2b;
V12_beta = RealV12_beta + 1i .* ImagV12_beta;

V22_beta = -(3 .* t_11 + t_22) .* ca .* sb ...
    - 4 .* r_11 .* ( c3a .* sb + s2b) ...
    - 2 .* (3 .* u_11 + u_22) .* c2a .* s2b ...
    + 4 / sqrt(3) .* r_12 .* (-2 .* c3a .* sb + s2b);


grad_H_kx = a / 2 .* 1e3 .* [V0_alpha ; conj( V1_alpha ) ; conj( V2_alpha ) ; ...
    V1_alpha ; V11_alpha ; conj( V12_alpha ) ; V2_alpha ; V12_alpha ; V22_alpha]; 

grad_H_ky = a .* 1e3 .* sqrt(3) / 2 .* [V0_beta ; conj( V1_beta ) ; conj( V2_beta ) ; ...
    V1_beta ; V11_beta ; conj( V12_beta ) ; V2_beta ; V12_beta ; V22_beta]; 



